use axiomatic.AxiomaticSem
use dataTypes.DataTypes
use seq.Seq
use int.Int
use natural.Natural
let test (__stack__: stack_t) (__fuel__: int) : stack_t
  requires { (length __stack__) = 1 }
  requires { __fuel__ > 0 }
  requires { (typ_infer (d (__stack__[0])))
               = (Pair_t
                    (List_t (Comparable_t String_t ))
                    (List_t (Comparable_t String_t ))) }
  ensures { (length result) = 1 }
  ensures { (typ_infer (d (result[0])))
              = (Pair_t
                   (List_t Operation_t )
                   (List_t (Comparable_t String_t ))) } =
  let __stack__ =
    [@expl:16]
    [@vc:white_box]
    fun 
      ensures { ((length result) = 1) /\
                  ((typ_infer (d (result[0])))
                     = (Pair_t
                          (List_t Operation_t )
                          (List_t (Comparable_t String_t )))) } ->
      let __stack__ =
        [@expl:15]
        [@vc:white_box]
        fun 
          ensures { ((length result) = 1) /\
                      ((typ_infer (d (result[0])))
                         = (List_t (Comparable_t String_t ))) } ->
          car __stack__ __fuel__ in
      ([@expl:14]
       [@vc:white_box]
       fun 
         ensures { ((length result) = 1) /\
                     ((typ_infer (d (result[0])))
                        = (Pair_t
                             (List_t Operation_t )
                             (List_t (Comparable_t String_t )))) } ->
         let __stack__ =
           [@expl:13]
           [@vc:white_box]
           fun 
             ensures { (((length result) = 2) /\
                          ((typ_infer (d (result[0])))
                             = (List_t (Comparable_t String_t )))) /\
                         ((typ_infer (d (result[1])))
                            = (List_t (Comparable_t String_t ))) } ->
             let top = peek __stack__ in
             (let __stack__ = __stack__[1 ..] in
              (let __stack__ =
                 [@expl:12]
                 [@vc:white_box]
                 fun 
                   ensures { (((length result) = 2) /\
                                ((typ_infer (d (result[0])))
                                   = (List_t (Comparable_t String_t )))) /\
                               ((typ_infer (d (result[1])))
                                  = (List_t (Comparable_t String_t ))) } ->
                   nil_op __stack__ __fuel__ (Comparable_t String_t ) in
               (top :: __stack__))) in
         ([@expl:11]
          [@vc:white_box]
          fun 
            ensures { ((length result) = 1) /\
                        ((typ_infer (d (result[0])))
                           = (Pair_t
                                (List_t Operation_t )
                                (List_t (Comparable_t String_t )))) } ->
            let __stack__ =
              [@expl:10]
              [@vc:white_box]
              fun 
                ensures { (((length result) = 2) /\
                             ((typ_infer (d (result[0])))
                                = (List_t (Comparable_t String_t )))) /\
                            ((typ_infer (d (result[1])))
                               = (List_t (Comparable_t String_t ))) } ->
                match d (peek __stack__)
                with
                  | (List (Cons hd tl) t) ->
                      (let __stack__ =
                         let __stack__ = __stack__[1 ..] in
                         ((mk_wf_data hd)
                            :: ((mk_wf_data (List tl t)) :: __stack__)) in
                       ([@expl:8]
                        [@vc:white_box]
                        fun 
                          ensures { (((length result) = 2) /\
                                       ((typ_infer (d (result[0])))
                                          = (List_t (Comparable_t String_t )))) /\
                                      ((typ_infer (d (result[1])))
                                         = (List_t (Comparable_t String_t ))) } ->
                          let __stack__ =
                            [@expl:7]
                            [@vc:white_box]
                            fun 
                              ensures { (((length result) = 2) /\
                                           ((typ_infer (d (result[0])))
                                              = (List_t
                                                   (Comparable_t String_t )))) /\
                                          ((typ_infer (d (result[1])))
                                             = (List_t
                                                  (Comparable_t String_t ))) } ->
                              cons_op __stack__ __fuel__ in
                          ([@expl:6]
                           [@vc:white_box]
                           fun 
                             ensures { (((length result) = 2) /\
                                          ((typ_infer (d (result[0])))
                                             = (List_t
                                                  (Comparable_t String_t )))) /\
                                         ((typ_infer (d (result[1])))
                                            = (List_t
                                                 (Comparable_t String_t ))) } ->
                             swap __stack__ __fuel__)))
                  | (List _Nil _) ->
                      (let __stack__ = __stack__[1 ..] in
                       ([@expl:9]
                        [@vc:white_box]
                        fun 
                          ensures { (((length result) = 2) /\
                                       ((typ_infer (d (result[0])))
                                          = (List_t (Comparable_t String_t )))) /\
                                      ((typ_infer (d (result[1])))
                                         = (List_t (Comparable_t String_t ))) } ->
                          nil_op __stack__ __fuel__ (Comparable_t String_t )))
                  | _ -> absurd
                end in
            ([@expl:5]
             [@vc:white_box]
             fun 
               ensures { ((length result) = 1) /\
                           ((typ_infer (d (result[0])))
                              = (Pair_t
                                   (List_t Operation_t )
                                   (List_t (Comparable_t String_t )))) } ->
               let __stack__ =
                 [@expl:4]
                 [@vc:white_box]
                 fun 
                   ensures { ((length result) = 1) /\
                               ((typ_infer (d (result[0])))
                                  = (List_t (Comparable_t String_t ))) } ->
                   drop __stack__ __fuel__ in
               ([@expl:3]
                [@vc:white_box]
                fun 
                  ensures { ((length result) = 1) /\
                              ((typ_infer (d (result[0])))
                                 = (Pair_t
                                      (List_t Operation_t )
                                      (List_t (Comparable_t String_t )))) } ->
                  let __stack__ =
                    [@expl:2]
                    [@vc:white_box]
                    fun 
                      ensures { (((length result) = 2) /\
                                   ((typ_infer (d (result[0])))
                                      = (List_t Operation_t ))) /\
                                  ((typ_infer (d (result[1])))
                                     = (List_t (Comparable_t String_t ))) } ->
                      nil_op __stack__ __fuel__ Operation_t  in
                  ([@expl:1]
                   [@vc:white_box]
                   fun 
                     ensures { ((length result) = 1) /\
                                 ((typ_infer (d (result[0])))
                                    = (Pair_t
                                         (List_t Operation_t )
                                         (List_t (Comparable_t String_t )))) } ->
                     pair __stack__ __fuel__))))) in
  __stack__