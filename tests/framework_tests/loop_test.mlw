use axiomatic.AxiomaticSem
use dataTypes.DataTypes
use seq.Seq
use int.Int
use natural.Natural
let test (__stack__: stack_t) (__fuel__: int) : stack_t
  requires { (length __stack__) = 1 }
  requires { __fuel__ > 0 }
  requires { (typ_infer (d (__stack__[0])))
               = (Pair_t (Comparable_t Bool_t ) (Comparable_t Nat_t )) }
  ensures { (length result) = 1 }
  ensures { (typ_infer (d (result[0])))
              = (Pair_t (List_t Operation_t ) (Comparable_t Nat_t )) } =
  let __stack__ =
    [@expl:Intermidate PostCondition 21]
    [@vc:white_box]
    fun ensures { (((length result) = 2) /\
                   ((typ_infer (d (result[0]))) = (Pair_t (List_t Operation_t ) (Comparable_t Bool_t )))) /\
                  ((typ_infer (d (result[1]))) = (Comparable_t Nat_t )) } ->
      let __stack__ =
        [@expl:Intermidate PostCondition 20]
        [@vc:white_box]
        fun 
          ensures { ((length result) = 1) /\
                      ((typ_infer (d (result[0]))) = (Comparable_t Bool_t )) } ->
          car __stack__ __fuel__ in
      ([@expl:Intermidate PostCondition 19]
       [@vc:white_box]
       fun 
         ensures { (((length result) = 2) /\
                      ((typ_infer (d (result[0])))
                         = (Pair_t
                              (List_t Operation_t )
                              (Comparable_t Bool_t )))) /\
                     ((typ_infer (d (result[1]))) = (Comparable_t Nat_t )) } ->
         let __stack__ =
           [@expl:Intermidate PostCondition 18]
           [@vc:white_box]
           fun 
             ensures { (((length result) = 2) /\
                          ((typ_infer (d (result[0])))
                             = (Comparable_t Bool_t ))) /\
                         ((typ_infer (d (result[1]))) = (Comparable_t Nat_t )) } ->
             let top = peek __stack__ in
             (let __stack__ = __stack__[1 ..] in
              (let __stack__ =
                 [@expl:Intermidate PostCondition 17]
                 [@vc:white_box]
                 fun 
                   ensures { (((length result) = 2) /\
                                ((typ_infer (d (result[0])))
                                   = (Comparable_t Bool_t ))) /\
                               ((typ_infer (d (result[1])))
                                  = (Comparable_t Nat_t )) } ->
                   push
                     __stack__
                     __fuel__
                     (mk_wf_data (Comparable (Nat (to_nat 0)))) in
               (top :: __stack__))) in
         ([@expl:Intermidate PostCondition 16]
          [@vc:white_box]
          fun 
            ensures { (((length result) = 2) /\
                         ((typ_infer (d (result[0])))
                            = (Pair_t
                                 (List_t Operation_t )
                                 (Comparable_t Bool_t )))) /\
                        ((typ_infer (d (result[1]))) = (Comparable_t Nat_t )) } ->
            let __stack__ =
              [@expl:Intermidate PostCondition 15]
              [@vc:white_box]
              fun 
                ensures { (((length result) = 2) /\
                             ((typ_infer (d (result[0])))
                                = (Comparable_t Bool_t ))) /\
                            ((typ_infer (d (result[1])))
                               = (Comparable_t Nat_t )) } ->
                let rec loop_fun (__stack__: stack_t) (__fuel__: int) : stack_t =
                          match d (peek __stack__)
                          with
                            | (Comparable (Bool b)) ->
                                (let __stack__ = __stack__[1 ..] in
                                 (if b
                                  then (loop_fun
                                          (let __stack__ =
                                             [@expl:Intermidate PostCondition 14]
                                             [@vc:white_box]
                                             fun 
                                               ensures { (((length result)
                                                             = 2) /\
                                                            ((typ_infer  (d   (result[0])))
                                                               = (Comparable_t
                                                                    Bool_t ))) /\
                                                           ((typ_infer
                                                               (d (result[1])))
                                                              = (Comparable_t
                                                                   Nat_t )) } ->
                                               let __stack__ =
                                                 [@expl:Intermidate PostCondition 13]
                                                 [@vc:white_box]
                                                 fun 
                                                   ensures { (((length result)
                                                                 = 2) /\
                                                                ((typ_infer
                                                                    (
                                                                    d
                                                                    (result[0])))
                                                                   = (
                                                                   Comparable_t
                                                                    Nat_t ))) /\
                                                               ((typ_infer
                                                                   (d
                                                                    (result[1])))
                                                                  = (
                                                                  Comparable_t
                                                                    Nat_t )) } ->
                                                   push
                                                     __stack__
                                                     __fuel__
                                                     (mk_wf_data
                                                        (Comparable
                                                           (Nat (to_nat 1)))) in
                                               ([@expl:Intermidate PostCondition 12]
                                                [@vc:white_box]
                                                fun 
                                                  ensures { (((length result)
                                                                = 2) /\
                                                               ((typ_infer
                                                                   (d
                                                                    (result[0])))
                                                                  = (
                                                                  Comparable_t
                                                                    Bool_t ))) /\
                                                              ((typ_infer
                                                                  (d
                                                                    (result[1])))
                                                                 = (Comparable_t
                                                                    Nat_t )) } ->
                                                  let __stack__ =
                                                    [@expl:Intermidate PostCondition 11]
                                                    [@vc:white_box]
                                                    fun 
                                                      ensures { ((length
                                                                    result)
                                                                   = 1) /\
                                                                  ((typ_infer
                                                                    (d
                                                                    (result[0])))
                                                                    = (
                                                                    Comparable_t
                                                                    Nat_t )) } ->
                                                      add __stack__ __fuel__ in
                                                  ([@expl:Intermidate PostCondition 10]
                                                   [@vc:white_box]
                                                   fun 
                                                     ensures { (((length
                                                                    result)
                                                                   = 2) /\
                                                                  ((typ_infer
                                                                    (d
                                                                    (result[0])))
                                                                    = (
                                                                    Comparable_t
                                                                    Bool_t ))) /\
                                                                 ((typ_infer
                                                                    (d
                                                                    (result[1])))
                                                                    = (
                                                                    Comparable_t
                                                                    Nat_t )) } ->
                                                     let __stack__ =
                                                       [@expl:Intermidate PostCondition 9]
                                                       [@vc:white_box]
                                                       fun 
                                                         ensures { (((length
                                                                    result)
                                                                    = 2) /\
                                                                    ((typ_infer
                                                                    (d
                                                                    (result[0])))
                                                                    = (Comparable_t
                                                                    Nat_t ))) /\
                                                                    ((typ_infer
                                                                    (d
                                                                    (result[1])))
                                                                    = (Comparable_t
                                                                    Nat_t )) } ->
                                                         dup
                                                           __stack__
                                                           __fuel__ in
                                                     ([@expl:Intermidate PostCondition 8]
                                                      [@vc:white_box]
                                                      fun 
                                                        ensures { (((length
                                                                    result)
                                                                    = 2) /\
                                                                    ((typ_infer
                                                                    (d
                                                                    (result[0])))
                                                                    = (Comparable_t
                                                                    Bool_t ))) /\
                                                                    (
                                                                    (typ_infer
                                                                    (d
                                                                    (result[1])))
                                                                    = (
                                                                    Comparable_t
                                                                    Nat_t )) } ->
                                                        let __stack__ =
                                                          [@expl:Intermidate PostCondition 7]
                                                          [@vc:white_box]
                                                          fun 
                                                            ensures { 
                                                            ((((length result)
                                                                 = 3) /\
                                                                ((typ_infer
                                                                    (
                                                                    d
                                                                    (result[0])))
                                                                   = (
                                                                   Comparable_t
                                                                    Nat_t ))) /\
                                                               ((typ_infer
                                                                   (d
                                                                    (result[1])))
                                                                  = (
                                                                  Comparable_t
                                                                    Nat_t ))) /\
                                                              ((typ_infer
                                                                  (d
                                                                    (result[2])))
                                                                 = (Comparable_t
                                                                    Nat_t )) } ->
                                                            push
                                                              __stack__
                                                              __fuel__
                                                              (mk_wf_data
                                                                 (Comparable
                                                                    (
                                                                    Nat
                                                                    (to_nat
                                                                    10)))) in
                                                        ([@expl:Intermidate PostCondition 6]
                                                         [@vc:white_box]
                                                         fun 
                                                           ensures { 
                                                           (((length result)
                                                               = 2) /\
                                                              ((typ_infer
                                                                  (d
                                                                    (result[0])))
                                                                 = (Comparable_t
                                                                    Bool_t ))) /\
                                                             ((typ_infer
                                                                 (d
                                                                    (
                                                                    result[1])))
                                                                = (Comparable_t
                                                                    Nat_t )) } ->
                                                           let __stack__ =
                                                             [@expl:Intermidate PostCondition 5]
                                                             [@vc:white_box]
                                                             fun 
                                                               ensures { 
                                                               (((length
                                                                    result)
                                                                   = 2) /\
                                                                  ((typ_infer
                                                                    (d
                                                                    (result[0])))
                                                                    = (
                                                                    Comparable_t
                                                                    Int_t ))) /\
                                                                 ((typ_infer
                                                                    (d
                                                                    (result[1])))
                                                                    = (
                                                                    Comparable_t
                                                                    Nat_t )) } ->
                                                               xor
                                                                 __stack__
                                                                 __fuel__ in
                                                           ([@expl:Intermidate PostCondition 4]
                                                            [@vc:white_box]
                                                            fun 
                                                              ensures { 
                                                              (((length
                                                                   result)
                                                                  = 2) /\
                                                                 ((typ_infer
                                                                    (d
                                                                    (result[0])))
                                                                    = (
                                                                    Comparable_t
                                                                    Bool_t ))) /\
                                                                ((typ_infer
                                                                    (
                                                                    d
                                                                    (result[1])))
                                                                   = (
                                                                   Comparable_t
                                                                    Nat_t )) } ->
                                                              gt
                                                                __stack__
                                                                __fuel__))))) in
                                           __stack__)
                                          __fuel__)
                                  else __stack__))
                            | _ -> absurd
                          end in
                __stack__ in
            ([@expl:Intermidate PostCondition 3]
             [@vc:white_box]
             fun 
               ensures { (((length result) = 2) /\
                            ((typ_infer (d (result[0])))
                               = (Pair_t
                                    (List_t Operation_t )
                                    (Comparable_t Bool_t )))) /\
                           ((typ_infer (d (result[1])))
                              = (Comparable_t Nat_t )) } ->
               let __stack__ =
                 [@expl:Intermidate PostCondition 2]
                 [@vc:white_box]
                 fun 
                   ensures { ((((length result) = 3) /\
                                 ((typ_infer (d (result[0])))
                                    = (List_t Operation_t ))) /\
                                ((typ_infer (d (result[1])))
                                   = (Comparable_t Bool_t ))) /\
                               ((typ_infer (d (result[2])))
                                  = (Comparable_t Nat_t )) } ->
                   nil_op __stack__ __fuel__ Operation_t  in
               ([@expl:Intermidate PostCondition 1]
                [@vc:white_box]
                fun 
                  ensures { (((length result) = 2) /\
                               ((typ_infer (d (result[0])))
                                  = (Pair_t
                                       (List_t Operation_t )
                                       (Comparable_t Bool_t )))) /\
                              ((typ_infer (d (result[1])))
                                 = (Comparable_t Nat_t )) } ->
                  pair __stack__ __fuel__)))) in
  __stack__